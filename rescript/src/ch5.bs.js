// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Belt_Int = require("rescript/lib/js/belt_Int.js");

function interp(_exp) {
  while(true) {
    var exp = _exp;
    switch (exp.TAG | 0) {
      case /* NumC */0 :
          return exp._0;
      case /* PlusC */1 :
          return interp(exp._0) + interp(exp._1) | 0;
      case /* MultC */2 :
          return Math.imul(interp(exp._0), interp(exp._1));
      case /* IfCondC */3 :
          if (interp(exp._0) === 0) {
            _exp = exp._2;
            continue ;
          }
          _exp = exp._1;
          continue ;
      
    }
  };
}

function desugar(ars) {
  switch (ars.TAG | 0) {
    case /* NumS */0 :
        return {
                TAG: /* NumC */0,
                _0: ars._0
              };
    case /* PlusS */1 :
        return {
                TAG: /* PlusC */1,
                _0: desugar(ars._0),
                _1: desugar(ars._1)
              };
    case /* MultS */2 :
        return {
                TAG: /* MultC */2,
                _0: desugar(ars._0),
                _1: desugar(ars._1)
              };
    case /* MinusS */3 :
        return {
                TAG: /* PlusC */1,
                _0: desugar(ars._0),
                _1: {
                  TAG: /* MultC */2,
                  _0: {
                    TAG: /* NumC */0,
                    _0: -1
                  },
                  _1: desugar(ars._1)
                }
              };
    case /* SquareS */4 :
        var l = ars._0;
        return {
                TAG: /* PlusC */1,
                _0: desugar(l),
                _1: desugar(l)
              };
    case /* IfCondS */5 :
        return {
                TAG: /* IfCondC */3,
                _0: desugar(ars._0),
                _1: desugar(ars._1),
                _2: desugar(ars._2)
              };
    
  }
}

var an = interp({
      TAG: /* PlusC */1,
      _0: {
        TAG: /* MultC */2,
        _0: {
          TAG: /* NumC */0,
          _0: 2
        },
        _1: {
          TAG: /* NumC */0,
          _0: 4
        }
      },
      _1: {
        TAG: /* NumC */0,
        _0: 3
      }
    });

var an1 = interp(desugar({
          TAG: /* PlusS */1,
          _0: {
            TAG: /* SquareS */4,
            _0: {
              TAG: /* NumS */0,
              _0: 8
            }
          },
          _1: {
            TAG: /* NumS */0,
            _0: 3
          }
        }));

function numFromStr(str) {
  var n = Belt_Int.fromString(str);
  if (n !== undefined) {
    return n;
  } else {
    return 0;
  }
}

var a = numFromStr("22");

exports.interp = interp;
exports.desugar = desugar;
exports.an = an;
exports.an1 = an1;
exports.numFromStr = numFromStr;
exports.a = a;
/* an Not a pure module */
